#define TARGET_PID 14760


tracepoint:syscalls:sys_enter_epoll_wait
/ pid == TARGET_PID /
{
    @start[tid] = nsecs;
    @proc_name[tid] = comm;
    @xdTimeout[tid] = args->timeout;
}

tracepoint:syscalls:sys_exit_epoll_wait
/ @start[tid] && pid == TARGET_PID /
{
    $duration = nsecs - @start[tid];
    printf("{ \"pid\": %d, \"process\": \"%s\", \"event\": \"epoll_wait\", \"timeout\": \"%d\", \"duration_ns\": %lld }\n", pid, @proc_name[tid], @xdTimeout[tid], $duration);
    delete(@start[tid]);
    delete(@proc_name[tid]);
    delete(@xdTimeout[tid]);
}

tracepoint:syscalls:sys_enter_epoll_wait
/ pid == TARGET_PID /
{
    @start[tid] = nsecs;
    @proc_name[tid] = comm;
    @xdTimeout[tid] = args->timeout;
    @xdMaxEvents[tid] = args->maxevents;
}

tracepoint:syscalls:sys_exit_epoll_wait
/ @start[tid] && pid == TARGET_PID /
{
    $duration = nsecs - @start[tid];
    $nazwa = @proc_name[tid];
    $retval = args->ret;

    //if ($retval != 0 && $retval != 1 &&  @proc_name[tid] == "reactor-http-ep") {
    //if ($retval != 0 && $retval != 1) {
        //printf("{ \"cpu_core\": \"%d\", \"thread\": \"%s\", \"Option\": \"epollwai\", \"duratioNs\": %lld , \"epoll_wait_pid\": %d,  \"event\": \"epoll_wait\", \"maxEvents\": \"%d\", \"timeout\": \"%d\", \"result\": \"%d\" }\n", cpu, @proc_name[tid], $duration, pid,  @xdMaxEvents[tid],  @xdTimeout[tid], $retval);
        //printf("{ \"cpu_core\": %lld }\n", $retval);
    //}
    delete(@start[tid]);
    delete(@proc_name[tid]);
    delete(@xdTimeout[tid]);
    delete(@xdMaxEvents[tid]);
}


tracepoint:syscalls:sys_enter_epoll_ctl
/ pid == TARGET_PID /
{
    @start_ctl[tid] = nsecs;
    @proc_name_ctl[tid] = comm;
}

tracepoint:syscalls:sys_exit_epoll_ctl
/ @start_ctl[tid] && pid == TARGET_PID /
{
    $duration_ctl = nsecs - @start_ctl[tid];
    printf("{ \"pid\": %d, \"process\": \"%s\", \"event\": \"epoll_ctl\", \"duration_ns\": %lld }\n", pid, @proc_name_ctl[tid], $duration_ctl);
    delete(@start_ctl[tid]);
    delete(@proc_name_ctl[tid]);
}

uprobe:/lib/x86_64-linux-gnu/libc.so.6:epoll_wait
/ pid == TARGET_PID /
{
   @start[tid] = nsecs;
}

uretprobe:/lib/x86_64-linux-gnu/libc.so.6:epoll_wait
/ @start[tid] /
{
    $result = retval;
    $duration = nsecs - @start[tid];
    //if ($result != 0 && $result != 1) {
        //printf("{ \"thread\": \"%s\", \"option\": \"epoll_wait\", \"duratioNs\": %lld , \"result\": %d }\n", comm, $duration, $result );
    //}
    delete(@start[tid]);
}