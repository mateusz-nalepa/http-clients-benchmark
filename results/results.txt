 Wyniki
 malo watkow bez parallel vs malo watkow z parallel
 90 RPS vs 150 RPS
 Dodanie samego Scheduler.parallel() na końcu mega pomaga

 Wyniki
 duzo watkow bez parallel vs duzo watkow z parallel
 z grubsza tak samo

----------
 Wyniki
 malo watkow bez parallel vs duzo watkow z parallel
 112 RPS vs 170 RPS

 Wyniki
 duzo watkow z parallel vs malo watkow bez parallel
 115 RPS vs 193 RPS - trochę dziwne, powinno być inaczej chyba XD



###########################
 duzo watkow bez parallel vs malo watkow bez parallel
 170 RPS vs 120 RPS

####
 duzo watkow bez parallel vs malo watkow z parallel
 skrypt 20, klientow 50
 RPSy z grubsza takie samy, czasy odpowiedzi malo watkow ma lepsze, w sumie troche dziwne, że ma lepsze czasy, a RPS takie samo

 duzo watkow bez parallel vs malo watkow z parallel
 skrypt 20, klientow 50
 RPSy z grubsza takie samy, czasy odpowiedzi malo watkow ma lepsze, w sumie troche dziwne, że ma lepsze czasy, a RPS takie samo
 w obu przypadkach powyżej pewnie wykres gannta wygląda ianczej, stąd ta różnica

%%%%%%
 malo bez parallel vs malo z parallel
 125 do 175 a nawet 225 RPS!


####
dla wszystkich jest
return ReactorClientHttpConnector(clientCustomization.invoke(HttpClient.create(connectionProviderBuilder.build())))
sharedLoopResources
i generalnie jest dekoder i encoder dla jsona

1.
2025.06.01
parallel, potem boundedElastic
20l
50 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-05T23:14:07.794Z&to=2025-01-05T23:34:36.937Z&timezone=browser

2.
2025.06.01
wlasna pula 8 watkow
 potem
wlasna pula 256 watkow
20l
50 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T00:12:34.045Z&to=2025-01-06T00:36:35.014Z&timezone=browser

3.
2025.06.01
newParallel 8 watkow
 potem
newParallel 256 watkow
20l
50 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T00:37:42.000Z&to=2025-01-06T01:00:33.369Z&timezone=browser

4.
2025.06.01
baza, brak publishOn
20l
50 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T01:05:25.711Z&to=2025-01-06T01:16:39.228Z&timezone=browser

5.
2025.06.01
wlasna pula 8, thread priority MAX
20l
50 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T01:18:16.872Z&to=2025-01-06T01:29:55.830Z&timezone=browser


#########
tutaj jest tylko i wylacznie stringi, bez jsonow
6.
2025.06.01
baza - bez publishOn
1s - small client
1 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T01:44:43.327Z&to=2025-01-06T01:50:57.568Z&timezone=browser

7.
parallel - moze pusc znowu, bo dziwne wyniki moze jak 2 apki na raz odpalone xd
1s - small client
1 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T01:53:02.739Z&to=2025-01-06T01:59:59.345Z&timezone=browser

8.
boundedElastic
1s - small client
1 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T02:01:38.448Z&to=2025-01-06T02:08:00.343Z&timezone=browser



9. 4m
te mozna zignorować xd
bounded Elastic 8
20l
50 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T11:38:54.681Z&to=2025-01-06T11:43:01.141Z&timezone=browser

10. 4m
custom 8
20l
50 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T11:44:07.443Z&to=2025-01-06T11:48:07.165Z&timezone=browser

11. 4m
po prostu bounded
20l
50 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T11:50:04.189Z&to=2025-01-06T11:54:22.738Z&timezone=browser


12. 16m
po prostu bounded
20l
50 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T11:55:39.704Z&to=2025-01-06T12:12:09.301Z&timezone=browser

13. 16m
bounded 8
20l
50 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T12:13:05.748Z&to=2025-01-06T12:29:34.134Z&timezone=browser

 w sumie podobne wyniki :D

14. 16m
parallel
20l
50 batchSize
http://localhost:3000/d/bdp8tt8kshekgea/metricssimple?from=2025-01-06T12:36:50.515Z&to=2025-01-06T12:56:24.289Z&timezone=browser